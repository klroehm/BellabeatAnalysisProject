After the data is collected, it must be cleaned and processed. These are the general steps I took in Excel:
-Ensure there are is missing or biased data 
-Remove any duplicate entries (Data -> Remove Duplicates)
-Sort entries by date and time (Format -> Sort & Filter -> Sort Oldest to Newest)
-Filter to only show necessary data (Data Validation -> Filter)

Once the data is cleaned and ready, it can be imported to R for further analysis.
In R, the first step is to istall all necessary packages. 
For this project, I used the Tidyverse package (This system contains several packages used for data manipulation, exploration, and visualization) and the Janitor package, which makes cleaning data easier
      install.packages("tidyverse")
      library(tidyverse)
      install.packages("janitor")
      library(janitor)
Then, import all databases needed
      dailyActivity_merged <- read_csv("dailyActivity_merged.csv”)
      hourlySteps_merged <- read_csv("hourlySteps_merged.csv")
      sleepDay_merged <- read_csv("sleepDay_merged.csv")
      hourlyCalories_merged <- read_csv("hourlyCalories_merged.csv") 
 Then, using the janitors package, make all the variable names consistent in one line of code, by leaving only characters and numbers
      clean_names(dailyActivity_merged)
      clean_names(hourlySteps_merged)
      clean_names(sleepDay_merged)
      clean_names(hourlyCalories_merged)
 Next, I want to know the number of users (distinct ID numbers) in each dataset
      n_distinct(dailyActivity_merged$Id)
      n_distinct(hourlySteps_merged$Id)
      n_distinct(sleepDay_merged$Id)
      n_distinct(hourlyCalories_merged$Id)
 All datasets contained 33 unique ID numbers, except the sleepDay_merged dataset only contained 24 unique entrants.
 Generally, I want at least 30 participants to confidently make any decisions, so any conclusions I come to based solely off sleepDay datasets may be less accurate. 
 Now, I want to ensure that the date column in all datasets is in 'date/time' format. 
      dailyActivity_merged$ActivityDate=as.POSIXct(dailyActivity_merged$ActivityDate, format="%m/%d/%Y", tz=Sys.timezone())
      dailyActivity_merged$date <- format(dailyActivity_merged$ActivityDate, format = "%m/%d/%y")
 I can check to make sure this worked, by using the 'str' function, which returns the type of each element in the data
      str(dailyActivity_merged)
      spc_tbl_ [940 × 16] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
       $ Id                      : num [1:940] 1.5e+09 1.5e+09 1.5e+09 1.5e+09 1.5e+09 ...
       $ ActivityDate            : POSIXct[1:940], format: "2016-04-12" "2016-04-13" ...
       $ TotalSteps              : num [1:940] 13162 10735 10460 9762 12669 ...
       $ TotalDistance           : num [1:940] 8.5 6.97 6.74 6.28 8.16 ...
       $ TrackerDistance         : num [1:940] 8.5 6.97 6.74 6.28 8.16 ...
       $ LoggedActivitiesDistance: num [1:940] 0 0 0 0 0 0 0 0 0 0 ...
       $ VeryActiveDistance      : num [1:940] 1.88 1.57 2.44 2.14 2.71 ...
       $ ModeratelyActiveDistance: num [1:940] 0.55 0.69 0.4 1.26 0.41 ...
       $ LightActiveDistance     : num [1:940] 6.06 4.71 3.91 2.83 5.04 ...
       $ SedentaryActiveDistance : num [1:940] 0 0 0 0 0 0 0 0 0 0 ...
       $ VeryActiveMinutes       : num [1:940] 25 21 30 29 36 38 42 50 28 19 ...
       $ FairlyActiveMinutes     : num [1:940] 13 19 11 34 10 20 16 31 12 8 ...
       $ LightlyActiveMinutes    : num [1:940] 328 217 181 209 221 164 233 264 205 211 ...
       $ SedentaryMinutes        : num [1:940] 728 776 1218 726 773 ...
       $ Calories                : num [1:940] 1985 1797 1776 1745 1863 ...
       $ date                    : chr [1:940] "04/12/16" "04/13/16" "04/14/16" "04/15/16" ...
It shows that the ActivityDate column is in the POSIXct (date/time) format, which means the code worked, so I'll add that same formula to the rest of the datasets.
But first, since I want to base some of my analysis on times of day, I want to separate the Date column into a seperate column for date and a column for time.
      > sleepDay_merged$SleepDay=as.POSIXct(sleepDay_merged$SleepDay, format="%m/%d/%Y %I:%M:%S %p", tz=Sys.timezone())
      > sleepDay_merged$time <- format(sleepDay_merged$SleepDay, format = "%H:%M:%S")
      > sleepDay_merged$date <- format(sleepDay_merged$SleepDay, format = "%m/%d/%y")
Then, I used the summary() function to ensure the columns were properly separated
Now, I do the same formula for the other two datasets.
After these steps, it's time to start the analysis.
So, the first question I want to ask is what is the average total steps that is taken each day?

      
